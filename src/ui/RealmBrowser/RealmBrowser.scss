@import "~realm-studio-styles/variables";

// This constant should match the HANDLE_WIDTH in HeaderCell.tsx
$realm-browser-header-handle-width: 5px;
// This constant should match the rowHeights.header constant in Table.tsx
$realm-browser-header-height: 40px;
$realm-browser-header-icon-space: 24px;
$realm-browser-header-handle-hover-bg: rgba(0, 0, 0, .1);
$realm-browser-header-handle-dragging-bg: rgba($ultramarine, .5);

$realm-browser-more-indicator-size: $spacer;
$realm-browser-more-indicator-dark-color: rgba(0, 0, 0, .2);
$realm-browser-more-indicator-light-color: rgba(0, 0, 0, 0);

$row-stripe: mix($white, $dove, 50%);
$highlight-row-bg: mix($white, $indigo, 75%);
$highlight-row-color: $black;

.RealmBrowser {
  display: flex;
  height: 100%;

  &__Sidebar,
  &__Table__HeaderGrid,
  &__Content__Actions {
    z-index: 1; // Overlay when drag-reordering elements in lists
  }

  &__Sidebar {
    background: $window-background;
    border-right: 1px solid $dove;
    display: flex;
    flex-direction: column;
    padding: $spacer / 2;
    padding-bottom: 0;
    width: 200px;

    &__Header {
      align-items: baseline;
      border-bottom: 1px solid $dove;
      color: $elephant;
      display: flex;
      font-size: .9rem;
      font-weight: bold;
      height: 2rem;
      justify-content: space-between;
      line-height: 2em;
      margin-bottom: $spacer / 2;
      text-transform: uppercase;
    }

    &__SchemaList {
      flex-grow: 1;
      margin: 0 (-$spacer / 2);
      overflow-x: hidden;
      overflow-y: auto;
      padding: 0;

      &--empty {
        display: flex;
        height: 100%;
        justify-content: flex-start;

        &::before {
          color: $elephant;
          content: "This Realm has no schemas defined";
          text-align: center;
        }
      }
    }

    &__Schema {
      flex-direction: column;
      list-style: none;

      &__Name {
        flex-shrink: 1;
        overflow: hidden;
        padding-right: $spacer / 4;
        text-overflow: ellipsis;
        white-space: nowrap;
      }

      &__Info {
        align-items: center;
        background: $window-background;
        cursor: pointer;
        display: flex;
        justify-content: space-between;
        padding: $spacer / 2;

        &:hover,
        &:focus {
          background: $dove;
        }

        &--selected {
          background: $primary;
          color: $dove;

          &:hover,
          &:focus {
            background: $primary;
          }
        }
      }
    }

    &__List {
      background: $dove;
      // box-shadow: inset 0 0 .4rem $realm-browser-list-box-shadow-color;
      padding: $spacer / 2;

      &__Name {
        align-items: center;
        display: flex;
        justify-content: space-between;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;

        &__Text {
          font-size: .8rem;
          margin-right: $spacer / 2;
          overflow: hidden;
        }
      }

      &__Parent {
        font-size: .8rem;
      }

      &__ParentObject {
        color: $primary;
        cursor: pointer;
        text-decoration: underline;
      }
    }
  }

  &__Wrapper {
    display: flex;
    flex: 1 1 0;
    flex-direction: column;
  }

  &__SelectObject {
    display: flex;
    flex: 1 1 0;
    flex-direction: column;
    min-height: 300px;
    padding: 0;
  }

  &__Content {
    display: flex;
    flex: 1 1 0;
    flex-direction: column;

    &--no-schema-selected {
      align-items: center;
      display: flex;
      height: 100%;
      justify-content: center;

      &::before {
        color: $elephant;
        content: "No schema selected";
      }
    }
  }

  &__Topbar {
    align-items: center;
    background: $window-background;
    display: flex;
    padding: $spacer / 2;

    &__Changes {
      align-items: center;
      display: flex;
      margin-right: $spacer / 2;
    }

    &__Filter {
      flex-grow: 1;
    }

    &__Button {
      margin-left: $spacer;
    }
  }

  &__Table {
    flex: 1 0 0;

    &__HeaderGrid {
      background: $white;
      overflow-x: hidden;
    }

    &__Row {
      background: $white;
      position: relative;
      transition: background-color 200ms;

      &--striped {
        background: $row-stripe;
      }

      &--sorting {
        background: mix($row-stripe, $white, 40%);
        border-top: 1px solid $dove;
        margin-top: -1px;
        transition: transform 300ms;
        user-select: none;
      }

      &--highlighted,
      &--sorting-selected {
        background: $highlight-row-bg;
        color: $highlight-row-color;
      }

      &--sorting-selected {
        box-shadow: 0 0 10px $highlight-row-bg;
      }
    }

    &__HeaderCell,
    &__HeaderCellControl,
    &__Cell {
      border-bottom: 1px solid $dove;
      border-right: 1px solid $dove;
      position: relative;

      // We need to do this, because reactstrap adds the form-control class
      // after the classNames that we provide.
      .form-control { // sass-lint:disable-line class-name-format
        background: transparent;
      }
    }

    &__Cell {
      user-select: none;
    }

    &__HeaderCell {
      display: flex;
      flex-direction: column;
      padding: 0 $realm-browser-header-icon-space 0 ($spacer / 4);
    }

    &__HeaderCellControl {
      align-items: center;
      color: $highlight-row-color;
      cursor: pointer;
      display: flex;
      justify-content: center;

      &:hover {
        background: $highlight-row-bg;
      }
    }

    &__HeaderName {
      font-size: $font-size-sm;
      font-weight: bold;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;

      &--primitive {
        &::before {
          color: $elephant;
          content: "primitive";
        }
      }
    }

    &__HeaderType {
      bottom: 0;
      color: $primary;
      font-size: $font-size-sm;
      font-weight: bold;
      overflow: hidden;
      position: absolute;
      text-overflow: ellipsis;
      white-space: nowrap;
    }

    &__HeaderSort {
      color: $elephant;
      cursor: pointer;
      font-size: 12px;
      position: absolute;
      right: 10px;
      top: 14px;

      &--active {
        color: $charcoal;
      }
    }

    &__HeaderHandle {
      cursor: ew-resize;
      height: 100%;
      position: absolute;
      right: -$realm-browser-header-handle-width / 2;
      top: 0;
      width: $realm-browser-header-handle-width;
      z-index: 1;

      &--dragging {
        background: $realm-browser-header-handle-dragging-bg;
      }

      &:not(&--dragging) {
        &:hover {
          background: $realm-browser-header-handle-hover-bg;
        }
      }
    }

    &__Cell,
    &__PropertyName {
      overflow: hidden;
      white-space: nowrap;
    }

    &__Input {
      background: transparent;
      border: 0;
      color: inherit;
      height: 100%;
      line-height: 1.1rem;
      white-space: nowrap;

      &--null {
        color: $elephant;
      }

      &--disabled {
        color: $elephant;
      }

      &--int {
        text-align: right;
      }

      &:focus {
        box-shadow: none;
        color: inherit;
      }
    }

    &__StringCell {
      &--int {
        overflow: hidden;
        position: absolute;
        right: $spacer / 2;
        text-align: right;
        text-overflow: ellipsis;
        width: 100%;
      }
    }

    &__ListCell,
    &__ObjectCell {
      border: 0;
      color: $primary;
      cursor: pointer;
    }

    &__ObjectCell,
    &__StringCell {
      &--null {
        color: $elephant;
        font-style: italic;
      }
    }

    &__ListCell {
      display: flex;
      width: 100%;

      &:hover {
        text-decoration: underline;
      }

      &__Value {
        flex: 1 1 0;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
      }

      &__Count {
        flex: 0 0 0;
        margin-left: $spacer / 4;
        white-space: nowrap;
      }
    }

    &__Content {
      // This is needed to contain the MoreIndicators
      position: relative;
    }

    &__More {
      opacity: 0;
      pointer-events: none;
      position: absolute;
      transition: opacity .2s;
      z-index: 4;

      &--visible {
        opacity: 1;
      }

      &--top,
      &--bottom {
        height: $realm-browser-more-indicator-size;
        width: 100%;
      }

      &--left,
      &--right {
        height: 100%;
        width: $realm-browser-more-indicator-size;
      }

      &--top {
        background: linear-gradient(
          to bottom,
          $realm-browser-more-indicator-dark-color,
          $realm-browser-more-indicator-light-color
        );
        top: $realm-browser-header-height;
      }

      &--bottom {
        background: linear-gradient(
          to top,
          $realm-browser-more-indicator-dark-color,
          $realm-browser-more-indicator-light-color
        );
        bottom: 0;
      }

      &--left {
        background: linear-gradient(
          to right,
          $realm-browser-more-indicator-dark-color,
          $realm-browser-more-indicator-light-color
        );
        left: 0;
      }

      &--right {
        background: linear-gradient(
          to left,
          $realm-browser-more-indicator-dark-color,
          $realm-browser-more-indicator-light-color
        );
        right: 0;
      }
    }

    @import "../reusable/ReactVirtualized";
  }

  &__Bottombar {
    align-items: center;
    background: $ultramarine;
    color: $dove;
    display: flex;
    height: 0;
    justify-content: space-between;
    transition: height 100ms;

    &--visible {
      height: 2.8rem;
    }

    &__UnsavedChanges,
    &__Controls {
      padding: $spacer / 2;
    }

    &__UnsavedChanges {
      font-size: .8rem;
      padding: 0 $spacer;
      text-align: center;
    }

    &__Controls {
      display: flex;
      justify-content: center;

      * {
        margin-left: $spacer / 2;
      }
    }
  }
}
