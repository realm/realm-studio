FROM electronuserland/builder:8

# This got copied from https://github.com/electron-userland/electron-builder/blob/master/docker/wine/Dockerfile
# See https://github.com/electron-userland/electron-builder/issues/2531

RUN apt-get update && apt-get install -y --no-install-recommends software-properties-common && dpkg --add-architecture i386 && curl -L https://dl.winehq.org/wine-builds/Release.key > Release.key && apt-key add Release.key && apt-add-repository https://dl.winehq.org/wine-builds/ubuntu && \
  apt-get update && \
  apt-get -y remove software-properties-common libdbus-glib-1-2 python3-dbus python3-gi python3-pycurl python3-software-properties && \
  apt-get install -y --no-install-recommends winehq-stable && \
  # Next three lines are copied from https://github.com/electron-userland/electron-builder/blob/master/docker/wine-chrome/Dockerfile
  wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \
  echo "deb http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google.list && \
  apt-get update -y && apt-get install -y --no-install-recommends xvfb google-chrome-stable && \
  # Install display server dependencies (see https://github.com/electron/spectron/issues/144#issuecomment-270778659)
  apt-get install -y xvfb libxtst6 libxss1 libgtk2.0-0 && \
  # Install core libraries for chromium driver (see https://github.com/electron/spectron/issues/144#issuecomment-270778659)
  apt-get install -y libnss3 libasound2 libgconf-2-4 && \
  # Install a dependency used by keytar
  apt-get -qq install -y libsecret-1-dev && \
  # clean
  apt-get clean && rm -rf /var/lib/apt/lists/* && unlink Release.key

RUN curl -L https://github.com/electron-userland/electron-builder-binaries/releases/download/wine-2.0.3-mac-10.13/wine-home.zip > /tmp/wine-home.zip && unzip /tmp/wine-home.zip -d /root/.wine && unlink /tmp/wine-home.zip

ENV WINEDEBUG -all,err+all
ENV WINEDLLOVERRIDES winemenubuilder.exe=d

# The next few lines are the only commands special to our Dockerfile

ADD package.json /tmp/
ADD package-lock.json /tmp/
RUN cd /tmp && ls /tmp && npm install --quiet
RUN cp -a /tmp/node_modules /project/
